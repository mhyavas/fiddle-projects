{"version":3,"sources":["hyperfiddle/history2.cljc"],"mappings":";AAcA,AAKA,AAAA;AAAA;;;gCAAA,hCAAaa;;AAAb,IAAAb,yDAAA,WACcc,MAAKC;AADnB,AAAA,IAAAd,kBAAA,EAAA,UAAA,OAAA,hBACca,qBAAAA;IADdZ,kBAAA,CAAAC,oCAAA,AAAAC,YAAAH;AAAA,AAAA,GAAA,GAAA,CAAAC,mBAAA;AAAA,QAAAA,gDAAAA,6DAAAA,fACcY,yCAAAA,nCAAKC,yCAAAA;;AADnB,IAAAV,kBAAA,CAAAF,oCAAA;AAAA,AAAA,GAAA,GAAA,CAAAE,mBAAA;AAAA,QAAAA,gDAAAA,6DAAAA,fACcS,yCAAAA,nCAAKC,yCAAAA;;AADnB,MAAA,AAAAT,2BAAA,qBACcQ;;;;AADd,AAAA,sCAAA,tCACGX,oFAAWW,MAAKC;AADnB,AAAA,GAAA,EAAA,GAAA,UAAA,aAAA,GAAA,CAAA,8DAAA,xFACcD,0BAAAA;AADd,OACcA,2DAAAA,MAAKC;;AADnB,OAAAf,uDACcc,MAAKC;;;;AADnB,IAAAR,qDAAA,WAEUO;AAFV,AAAA,IAAAb,kBAAA,EAAA,UAAA,OAAA,hBAEUa,qBAAAA;IAFVZ,kBAAA,CAAAM,gCAAA,AAAAJ,YAAAH;AAAA,AAAA,GAAA,GAAA,CAAAC,mBAAA;AAAA,QAAAA,gDAAAA,uDAAAA,TAEUY,mCAAAA;;AAFV,IAAAT,kBAAA,CAAAG,gCAAA;AAAA,AAAA,GAAA,GAAA,CAAAH,mBAAA;AAAA,QAAAA,gDAAAA,uDAAAA,TAEUS,mCAAAA;;AAFV,MAAA,AAAAR,2BAAA,iBAEUQ;;;;AAFV,AAAA,kCAAA,lCAEGN,4EAAOM;AAFV,AAAA,GAAA,EAAA,GAAA,UAAA,aAAA,GAAA,CAAA,0DAAA,pFAEUA,0BAAAA;AAFV,OAEUA,uDAAAA;;AAFV,OAAAP,mDAEUO;;;;AAFV,IAAAL,wDAAA,WAGaK;AAHb,AAAA,IAAAb,kBAAA,EAAA,UAAA,OAAA,hBAGaa,qBAAAA;IAHbZ,kBAAA,CAAAQ,mCAAA,AAAAN,YAAAH;AAAA,AAAA,GAAA,GAAA,CAAAC,mBAAA;AAAA,QAAAA,gDAAAA,uDAAAA,TAGaY,mCAAAA;;AAHb,IAAAT,kBAAA,CAAAK,mCAAA;AAAA,AAAA,GAAA,GAAA,CAAAL,mBAAA;AAAA,QAAAA,gDAAAA,uDAAAA,TAGaS,mCAAAA;;AAHb,MAAA,AAAAR,2BAAA,oBAGaQ;;;;AAHb,AAAA,qCAAA,rCAGGJ,kFAAUI;AAHb,AAAA,GAAA,EAAA,GAAA,UAAA,aAAA,GAAA,CAAA,6DAAA,vFAGaA,0BAAAA;AAHb,OAGaA,0DAAAA;;AAHb,OAAAL,sDAGaK;;;;AAHb,IAAAH,8DAAA,WAImBG,MAAKE;AAJxB,AAAA,IAAAf,kBAAA,EAAA,UAAA,OAAA,hBAImBa,qBAAAA;IAJnBZ,kBAAA,CAAAU,yCAAA,AAAAR,YAAAH;AAAA,AAAA,GAAA,GAAA,CAAAC,mBAAA;AAAA,QAAAA,gDAAAA,iEAAAA,nBAImBY,6CAAAA,vCAAKE,6CAAAA;;AAJxB,IAAAX,kBAAA,CAAAO,yCAAA;AAAA,AAAA,GAAA,GAAA,CAAAP,mBAAA;AAAA,QAAAA,gDAAAA,iEAAAA,nBAImBS,6CAAAA,vCAAKE,6CAAAA;;AAJxB,MAAA,AAAAV,2BAAA,0BAImBQ;;;;AAJnB,AAAA,2CAAA,3CAIGF,8FAAgBE,MAAKE;AAJxB,AAAA,GAAA,EAAA,GAAA,UAAA,aAAA,GAAA,CAAA,mEAAA,7FAImBF,0BAAAA;AAJnB,OAImBA,gEAAAA,MAAKE;;AAJxB,OAAAL,4DAImBG,MAAKE;;;;AAJxB,AAMA,AAAA,AAEA,+BAAA,uCAAAC,tEAAMG,+EAAuBG;AAA7B,AAAA,IAAAL,aAAAD;kBAAA,AAAAE,4CAAAD,WAAA,IAAA,zEAAgBG;UAAhB,AAAAF,4CAAAD,WAAA,IAAA,jEAAwBI;AAAxB,AAAA,0FAAiC,AAACE,+CAAOH,YAAQC,IAAIC,GAAGD;;AA8BxD,sCAAA,oDAAAG,1FAAME,oFAAgBb;AAAtB,AAAA,IAAAY,aAAAD;eAAA,AAAAN,4CAAAO,WAAA,IAAA,tEAA4BE;eAA5B,AAAAT,4CAAAO,WAAA,IAAA,tEAAqCG;AAArC,AACE,IAAMC,SAAO,AAACC,8CAAMC,cAAIJ;IAClBK,SAAO,AAACF,8CAAMC,cAAIH;AADxB,AAEE,IAAAK,aAAA,AAAAC,cAAA,AAAAC,gBAAwB,AAAA,yFAAUtB;IAAlCuB,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,IAAAE,aAAA,AAAAH,kDAAAE;UAAA,AAAApB,4CAAAqB,WAAA,IAAA,jEAASU;eAAT,AAAA/B,4CAAAqB,WAAA,IAAA,tEAAaW;AAAb,AAAA,AACE,CAACA,yCAAAA,kEAAAA,3BAASD,8CAAAA,1CAAIpC,8CAAAA,xCAAKgB,8CAAAA,vCAAOG,8CAAAA;;AAD5B;AAAA,eAAAC;eAAAG;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAE,qBAAA,AAAAN,cAAAD;AAAA,AAAA,GAAAO;AAAA,AAAA,IAAAP,iBAAAO;AAAA,AAAA,GAAA,AAAAC,6BAAAR;AAAA,IAAAS,kBAAA,AAAAC,sBAAAV;AAAA,AAAA,eAAA,AAAAW,qBAAAX;eAAAS;eAAA,AAAAG,gBAAAH;eAAA;;;;;;;AAAA,IAAAI,aAAA,AAAAC,gBAAAd;UAAA,AAAAf,4CAAA4B,WAAA,IAAA,jEAASG;eAAT,AAAA/B,4CAAA4B,WAAA,IAAA,tEAAaI;AAAb,AAAA,AACE,CAACA,yCAAAA,kEAAAA,3BAASD,8CAAAA,1CAAIpC,8CAAAA,xCAAKgB,8CAAAA,vCAAOG,8CAAAA;;AAD5B;AAAA,eAAA,AAAAgB,eAAAf;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;;AAQD,AAAA,AAAA,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,+EAAA,WAAAkB,mBAAAC,7GAAWmE;;AAAX,AAAA,IAAApE,yBAAA;AAAA,AAAA,OAAAA,8DAAAC,gBAAA;;;AAAA,CAAA,AAAA,+EAAA,WAAAC,mBAAAC,OAAAC,pHAAWgE;;AAAX,AAAA,IAAAlE,yBAAA;AAAA,AAAA,IAAAG,WAAAF;IAAAE,eAAA,EAAA,CAAAA,oBAAAC,oBAAA,AAAAD,aAAA;AAAA,AAAA,QAAAA;KAAA;AAAAE;;;KAAA;AAAAC;;;KAAA;AAAAC;;;;AAAA,OAAAC,4CAAAC,gBAAAR,OAAAC;;;;;AAAA,CAAA,AAAA,oFAAA,WAAAQ,mBAAAC,gBAAAC,lIAAWsD;;AAAX,AAAA,IAAAxD,yBAAA;AAAA,AAAA,OAAAG,+CAAA,WAAAC,kBAAAC;AAAA,AAAA,IAAAC,aAAAD;IAAAE,kBAAA,AAAApD,4CAAAmD,WAAA,IAAA;IAAAE,kBAAA,AAAArD,4CAAAmD,WAAA,IAAA;AAAA,AAAA,QAAAL,gDAAAA,8CAAAG,kBAAAG,gBAAAC,mBAAAP,0BAAAG,kBAAAG,gBAAAC;GAAAN,mBAAAF;;;AAAA,CAAA,AAAA,2FAAA,WAAAS,mBAAAC,qBAAAC,9IAAW6C;;AAAX,AAAA,IAAA/C,yBAAA;AAAA,AAAA,IAAAG,wBAAA,WAAAC;AAAA,AAAA,OAAAC,+BAAAJ,qBAAA,oBAAA,GAAA,IAAA,GAAAC,mBAAAE;;AAAA,AAAA,OAAAC,+BAAAJ,qBAAAE,sBAAA,qCAAA,KAAA,IAAAD,mBAAA,AAAAI,+CAAA,mFAAA,KAAAC,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,wDAAArB,cAAA,OAAA,KAAAqB,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,2DAAApB,gBAAA,OAAA,KAAAoB,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,6DAAAnB,iBAAA,eAAAE;;;AAAA,CAAA,AAAA,mFAAA,WAAAkB,9FAAWuC;;AAAX,AAAA,IAAAvC,eAAA;AAAA,AAAA,YAAAC,qBAAA,IAAAD,aAAA,EAAA,mFAAA,wDAAA,2DAAA,qEAAA,kBAAAlB,iBAAA,AAAAoB,oBAAApB,iBAAA,AAAAqB;;;AAAA,CAAA,AAAA,2EAAA,WAAAC,tFAAWmC;;AAAX,AAAA,IAAAnC,yBAAA;AAAA,AAAAC;;;AAAA,CAAA,AAAA,iFAAA,WAAAC,5FAAWiC;;AAAX,AAAA,IAAAjC,yBAAA;AAAA,AAAA,6CAAA5B,aAAAC,eAAAC,gBAAAyB,cAAAvB,gBAAAyB,3GAAWgC;;;AAAX,CAAA,AAAA,+EAAA,WAAA/B,1FAAW+B;;AAAX,AAAA,IAAA/B,yBAAA;AAAA,AAAA,QAAA,IAAA,AAAA3C,gBAAAiB;;;AAAA,CAAA,AAAA,2EAAA,WAAA2B,tFAAW8B;;AAAX,AAAA,IAAA9B,yBAAA;AAAA,AAAA,IAAAC,kBAAAH;AAAA,AAAA,GAAA,GAAA,CAAAG,mBAAA;AAAAA;;AAAA,IAAAA,sBAAA,AAAA,WAAAC;AAAA,AAAA,QAAA,aAAA,AAAAC,8BAAAD;GAAAF;AAAA,AAAA,CAAAF,gBAAAG;;AAAAA;;;;AAAA,CAAA,AAAA,6EAAA,WAAAG,UAAAC,lGAAWyB;;AAAX,AAAA,IAAA1B,gBAAA;AAAA,AAAA,SAAA,GAAA,CAAAC,cAAA,aAAA,EAAA,CAAA,AAAAD,8BAAA,AAAAC,6BAAA,EAAA,AAAAC,6CAAA,AAAAF,oBAAA,AAAAC,uBAAA,EAAA,AAAAC,6CAAA,AAAAF,sBAAA,AAAAC,yBAAA,EAAA,AAAAC,6CAAA,AAAAF,uBAAA,AAAAC,0BAAA,AAAAC,6CAAA,AAAAF,uBAAA,AAAAC;;;AAAA,CAAA,AAAA,mFAAA,nFAAWyB,8FASC1G,MAAKmB;;AATjB,AAAA,gBAAA,ZASYnB;AATZ,AAS6B,OAAQA,mDAAK,AAAC+H,qBAAW5G;;;AATtD,CAAA,AAAA,iFAAA,jFAAWuF,4FAGA1G,MAAKS;;AAHhB,AAAA,gBAAA,ZAGWT;AAHX,AAG6B,OAACa,oCAAeb,UAAK,AAACqH,wDAAWxE,aAAMvC,6BAAQG;;;AAH5E,CAAA,AAAA,iFAAA,jFAAWiG,4FAIA1G,MAAKS,EAAE6G;;AAJlB,AAAA,gBAAA,ZAIWtH;AAJX,AAI6B,0DAAA,WAAAuH,9DAAQvH;AAAR,AAAc,0EAAAuH,oCAAAA,tGAAC9G,kCAAAA,wDAAAA,PAAI6G,oCAAAA;;;;AAJhD,CAAA,AAAA,iFAAA,jFAAWZ,4FAKA1G,MAAKS,EAAE+G,KAAKC;;AALvB,AAAA,gBAAA,ZAKWzH;AALX,AAK6B,0DAAA,WAAA0H,9DAAQ1H;AAAR,AAAc,0EAAA0H,0CAAAA,5GAACjH,kCAAAA,8DAAAA,bAAI+G,0CAAAA,rCAAKC,0CAAAA;;;;AALrD,CAAA,AAAA,iFAAA,jFAAWf,4FAMA1G,MAAKS,EAAEkH,EAAEC,EAAEC;;AANtB,AAAA,gBAAA,ZAMW7H;AANX,AAM6B,0DAAA,WAAA8H,9DAAQ9H;AAAR,AAAc,uDAAA8H,hDAAC7G,8CAAMR,mBAAIkH,EAAEC,EAAEC;;;;AAN1D,CAAA,AAAA,4EAAA,WAAA1C,mBAAAC,1GAAWsB;;AAAX,AAAA,IAAAvB,yBAAA;AAAA,AAAA,GAAA,AAAAE,0BAAA,iFAAA,gEAAA,kEAAA,4EAAAD;AAAA,OAAAE,+CAAA,AAAAC,qBAAA,AAAAC,6CAAA,mCAAAL,wBAAAX,eAAAY;;AAAA,6CAAAvC,aAAAC,eAAAC,gBAAAyB,cAAA,AAAAiB,oBAAA,AAAAH,+CAAArC,gBAAAmC,kBAAA,hMAAWsB;;;;AAAX,CAAA,AAAA,iGAAA,WAAAhB,mBAAAjD,/HAAWiE;;AAAX,AAAA,IAAAhB,yBAAA;AAAA,AAAA,IAAAC,WAAAlD;IAAAkD,eAAA,EAAA,CAAAA,oBAAA/C,oBAAA,AAAA+C,aAAA;AAAA,AAAA,QAAAA;KAAA;KAAA;KAAA;AAAA;;;;AAAA,OAAAN,0BAAApC,gBAAAR;;;;;AAAA,CAAA,AAAA,mFAAA,WAAAmD,mBAAAC,gBAAA1B,jIAAWuC;;AAAX,AAAA,IAAAd,yBAAA;AAAA,AAAA,IAAAE,cAAAC;IAAAC,cAAAH;AAAA,AAAA,oBAAA,CAAAC,4CAAAA,0CAAA,wDAAAE,eAAAF,sBAAA,wDAAAE;AAAA,6CAAA7B,SAAArB,eAAAC,gBAAAyB,cAAAvB,gBAAA,vGAAWyD;;AAAX,oBAAA,CAAAZ,4CAAAA,0CAAA,2DAAAE,eAAAF,sBAAA,2DAAAE;AAAA,6CAAAnD,aAAAsB,SAAApB,gBAAAyB,cAAAvB,gBAAA,rGAAWyD;;AAAX,oBAAA,CAAAZ,4CAAAA,0CAAA,6DAAAE,eAAAF,sBAAA,6DAAAE;AAAA,6CAAAnD,aAAAC,eAAAqB,SAAAK,cAAAvB,gBAAA,pGAAWyD;;AAAX,6CAAA7D,aAAAC,eAAAC,gBAAAyB,cAAA,AAAAyB,8CAAAhD,gBAAA4C,gBAAA1B,UAAA,nLAAWuC;;;;;;AAAX,CAAA,AAAA,6EAAA,WAAAR,xFAAWQ;;AAAX,AAAA,IAAAR,yBAAA;AAAA,AAAA,OAAA7E,cAAA,AAAA4C,+CAAA,mFAAA,KAAAkC,mBAAA,wDAAAtD,aAAA,OAAA,KAAAsD,mBAAA,2DAAArD,eAAA,OAAA,KAAAqD,mBAAA,6DAAApD,gBAAA,eAAAE;;;AAAA,CAAA,AAAA,qFAAA,rFAAWyD,gGAYI1G,MAAKoC,IAAIC;;AAZxB,AAAA,gBAAA,ZAYerC;AAZf,AAaI,AAACgI,mDAAMlF,eAAQmF,gBAAM7F,IAAIC;;AACzBrC;;;AAdJ,CAAA,AAAA,wFAAA,xFAAW0G,mGAeOwB,EAAE9F;;AAfpB,AAAA,YAAA,RAekB8F;AAflB,AAeyB,OAACF,mDAAMlF,eAAQqF,iBAAO/F;;;AAf/C,CAAA,AAAA,oFAAA,WAAAgE,mBAAAjC,lHAAWuC;;AAAX,AAAA,IAAAN,yBAAA;AAAA,AAAA,6CAAAvD,aAAAC,eAAAC,gBAAAoB,SAAAlB,gBAAAyB,tGAAWgC;;;AAAX,CAAA,AAAA,iFAAA,WAAAL,mBAAAC,/GAAWI;;AAAX,AAAA,IAAAL,yBAAA;AAAA,AAAA,GAAA,AAAAE,wBAAAD;AAAA,OAAAD,kEAAA,AAAAG,eAAAF,oBAAA,KAAA,AAAAE,eAAAF,oBAAA;;AAAA,OAAAjD,+CAAAoD,gBAAAJ,uBAAAC;;;;AAAA,CAAA,AAAA,6EAAA,7EAAWI,wFAkBAwB;;AAlBX,AAAA,YAAA,RAkBWA;AAlBX,AAkBc,IAAAE,aAAA,AAAA9G,gBAAqBuB;kBAArB,AAAAxC,4CAAA+H,WAAA,IAAA,zEAAO7H;UAAP,AAAAF,4CAAA+H,WAAA,IAAA,jEAAe5H;AAAf,AACC,OAACwC,4CAAIzC,YAAQC;;;AAnB5B,CAAA,AAAAkG,4CAAA;AAAA,AAAA,AAAA;;;AAAA,CAAA,AAAAA,kDAAA;;AAAA,CAAA,AAAAA,uDAAA,WAAAC;AAAA,AAAA,YAAAC,eAAA,KAAA,mCAAA,KAAA,IAAA;;;AAAA,CAAA,AAAAF,0DAAA,WAAAC,mBAAAE;AAAA,AAAA,OAAAC,iBAAAD,qBAAA;;;AAAA;;;wCAAA,xCAAWM,wFAAatE,MAAMC,QAAQC;AAAtC,AAAA,YAAA2D,wDAAA,KAAA,KAAA,jCAAwB7D,MAAMC,QAAQC;;;AAAtC;;;2CAAA,mDAAAgE,9FAAWK;AAAX,AAAA,IAAAJ,uBAAA,iBAAAC,WAAA,AAAA3B,sDAAAyB,SAAA,0GAAA,2DAAA;AAAA,AAAA,GAAA,AAAAG,wBAAAH;AAAA,OAAAvB,6CAAA,mCAAAyB;;AAAAA;;;AAAA,AAAA,YAAAP,iCAAA,AAAA,sFAAAK,UAAA,AAAA,yFAAAA,UAAA,AAAA,2FAAAA,UAAA,KAAA,AAAAtB,oBAAAuB,sBAAA;;;AAAAN,AAsBH,AAAA,CAAA,AAAA,4EAAA2B,5EAAa3B;;AAAb,CAAA,AAAA,AAAaA,kGAEX,WAAY1G,MAAKC;AAAjB,AAAA,gBAAA,ZAAYD;AAAZ,AACE,OAACa,oCAAeb,UACd,AAACqH,wDAAW,AAASrH,gBACnB,WAAAsI;AAAA,AAAA,IAAAC,aAAAD;kBAAA,AAAAjI,4CAAAkI,WAAA,IAAA,zEAAMhI;UAAN,AAAAF,4CAAAkI,WAAA,IAAA,jEAAc/H;AAAd,AACE,GAAI,AAAC0E,6CAAE,AAAClD,gBAAMzB,aAAS,AAAYP;AAAnC,0FACG,AAACwI,6CAAK,2DAAA,3DAACC,+CAAOlI,iBAAqBN,OAAYO;;AADlD,0FAEG,AAACgI,6CAAK,2DAAA,3DAACC,+CAAOlI,gBAAU,OAAA,NAAKC,YAAMP,OAAO,OAAA,NAAKO;;;;;AAR5D,CAAA,AAAA,AAAakG,8FASX,WAAQ1G;AAAR,AAAA,gBAAA,ZAAQA;AAAR,AACE,OAACa,oCAAeb,UACd,AAACqH,wDAAW,AAASrH,gBAAM,WAAA0I;AAAA,AAAA,IAAAC,aAAAD;kBAAA,AAAArI,4CAAAsI,WAAA,IAAA,zEAAMpI;UAAN,AAAAF,4CAAAsI,WAAA,IAAA,jEAAcnI;AAAd,AAAA,0FAAqBD,YAAQ,iBAAAqI,kBAAK,OAAA,NAAKpI;IAAVqI,kBAAA;AAAA,AAAA,SAAAD,kBAAAC,mBAAAD,kBAAAC;;;;;AAX9D,CAAA,AAAA,AAAanC,iGAYX,WAAW1G;AAAX,AAAA,gBAAA,ZAAWA;AAAX,AAAiB,OAACa,oCAAeb,UACd,AAACqH,wDAAW,AAASrH,gBAAM,WAAA8I;AAAA,AAAA,IAAAC,aAAAD;kBAAA,AAAAzI,4CAAA0I,WAAA,IAAA,zEAAMxI;UAAN,AAAAF,4CAAA0I,WAAA,IAAA,jEAAcvI;AAAd,AAAA,0FAAqBD,YAAQ,iBAAAyI,kBAAK,OAAA,NAAKxI;IAAVyI,kBAAe,gCAAA,/BAAK,AAACjH,gBAAMzB;AAA3B,AAAA,SAAAyI,kBAAAC,mBAAAD,kBAAAC;;;;;AAb7E,CAAA,AAAA,AAAavC,uGAcX,WAAiB1G,MAAKE;AAAtB,AAAA,gBAAA,ZAAiBF;AAAjB,AAAiC,OAACkJ,sBAAOlJ,UAAKE;;AAGhD,AAAA;;;;;;oCAAA,4CAAAiJ,hFAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC;;;KAAA;AAAA,OAAAA,gEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,gEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,kEAAA,lEAAMD;AAAN,AAKM,uEAAA,KAAA,rEAACE;;;AALP,CAAA,kEAAA,lEAAMF,6EAMFG;AANJ,AAMmB,qFAAA,9EAACD,gEAAaC;;;AANjC,CAAA,kEAAA,lEAAMH,6EAOFG,cAAczG;AAPlB,AAO4B,OAACoE,sCAAc,6CAAA,mFAAA,yGAAA,zOAACsC,mNAAOD,mCAAmB,6CAAA,7CAACC,iFAAS1G;;;AAPhF,CAAA,4DAAA,5DAAMsG;;AAAN,AAgCG,AAAA,AAAA,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,gFAAA,WAAA/G,mBAAAC,9GAAW8H;;AAAX,AAAA,IAAA/H,yBAAA;AAAA,AAAA,OAAAA,8DAAAC,gBAAA;;;AAAA,CAAA,AAAA,gFAAA,WAAAC,mBAAAkH,OAAAhH,rHAAW2H;;AAAX,AAAA,IAAA7H,yBAAA;AAAA,AAAA,IAAAmH,WAAAD;IAAAC,eAAA,EAAA,CAAAA,oBAAA/G,oBAAA,AAAA+G,aAAA;AAAA,AAAA,QAAAA;KAAA;AAAAC;;;KAAA;AAAA/G;;;;AAAA,OAAAG,4CAAAC,gBAAAyG,OAAAhH;;;;;AAAA,CAAA,AAAA,qFAAA,WAAAQ,mBAAAC,gBAAAC,nIAAWiH;;AAAX,AAAA,IAAAnH,yBAAA;AAAA,AAAA,OAAAG,+CAAA,WAAAC,kBAAAuG;AAAA,AAAA,IAAAC,aAAAD;IAAApG,kBAAA,AAAApD,4CAAAyJ,WAAA,IAAA;IAAApG,kBAAA,AAAArD,4CAAAyJ,WAAA,IAAA;AAAA,AAAA,QAAA3G,gDAAAA,8CAAAG,kBAAAG,gBAAAC,mBAAAP,0BAAAG,kBAAAG,gBAAAC;GAAAN,mBAAAF;;;AAAA,CAAA,AAAA,4FAAA,WAAAS,mBAAAC,qBAAAC,/IAAWwG;;AAAX,AAAA,IAAA1G,yBAAA;AAAA,AAAA,IAAAG,wBAAA,WAAAC;AAAA,AAAA,OAAAC,+BAAAJ,qBAAA,oBAAA,GAAA,IAAA,GAAAC,mBAAAE;;AAAA,AAAA,OAAAC,+BAAAJ,qBAAAE,sBAAA,sCAAA,KAAA,IAAAD,mBAAA,AAAAI,+CAAA,mFAAA,KAAAC,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,yDAAA0F,eAAA,OAAA,KAAA1F,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,wDAAArB,cAAA,eAAAI;;;AAAA,CAAA,AAAA,oFAAA,WAAA8G,/FAAWM;;AAAX,AAAA,IAAAN,eAAA;AAAA,AAAA,YAAA3F,qBAAA,IAAA2F,aAAA,EAAA,mFAAA,yDAAA,gEAAA,kBAAA9G,iBAAA,AAAAoB,oBAAApB,iBAAA,AAAAqB;;;AAAA,CAAA,AAAA,4EAAA,WAAAC,vFAAW8F;;AAAX,AAAA,IAAA9F,yBAAA;AAAA,AAAAC;;;AAAA,CAAA,AAAA,kFAAA,WAAAC,7FAAW4F;;AAAX,AAAA,IAAA5F,yBAAA;AAAA,AAAA,8CAAAmF,cAAA/G,aAAA2B,cAAAvB,gBAAAyB,3FAAW2F;;;AAAX,CAAA,AAAA,gFAAA,WAAA1F,3FAAW0F;;AAAX,AAAA,IAAA1F,yBAAA;AAAA,AAAA,QAAA,IAAA,AAAA3C,gBAAAiB;;;AAAA,CAAA,AAAA,4EAAA,WAAA2B,vFAAWyF;;AAAX,AAAA,IAAAzF,yBAAA;AAAA,AAAA,IAAAC,kBAAAH;AAAA,AAAA,GAAA,GAAA,CAAAG,mBAAA;AAAAA;;AAAA,IAAAA,sBAAA,AAAA,WAAAC;AAAA,AAAA,QAAA,aAAA,AAAAC,8BAAAD;GAAAF;AAAA,AAAA,CAAAF,gBAAAG;;AAAAA;;;;AAAA,CAAA,AAAA,8EAAA,WAAAmF,UAAAC,nGAAWI;;AAAX,AAAA,IAAAL,gBAAA;AAAA,AAAA,SAAA,GAAA,CAAAC,cAAA,aAAA,EAAA,CAAA,AAAAD,8BAAA,AAAAC,6BAAA,EAAA,AAAA/E,6CAAA,AAAA8E,qBAAA,AAAAC,wBAAA,EAAA,AAAA/E,6CAAA,AAAA8E,oBAAA,AAAAC,uBAAA,AAAA/E,6CAAA,AAAA8E,uBAAA,AAAAC;;;AAAA,CAAA,AAAA,oFAAA,pFAAWI,+FASCrK,MAAKmB;;AATjB,AAAA,gBAAA,ZASYnB;AATZ,AAS6B,OAACkJ,sBAAOrG,aAAM1B;;;AAT3C,CAAA,AAAA,kFAAA,lFAAWkJ,6FAGArK,MAAKS;;AAHhB,AAAA,gBAAA,ZAGWT;AAHX,AAG6B,OAACgI,mDAAMnF,aAAMpC;;;AAH1C,CAAA,AAAA,kFAAA,lFAAW4J,6FAIArK,MAAKS,EAAE6G;;AAJlB,AAAA,gBAAA,ZAIWtH;AAJX,AAI6B,OAACgI,mDAAMnF,aAAMpC,EAAE6G;;;AAJ5C,CAAA,AAAA,kFAAA,lFAAW+C,6FAKArK,MAAKS,EAAE+G,KAAKC;;AALvB,AAAA,gBAAA,ZAKWzH;AALX,AAK6B,OAACgI,mDAAMnF,aAAMpC,EAAE+G,KAAKC;;;AALjD,CAAA,AAAA,kFAAA,lFAAW4C,6FAMArK,MAAKS,EAAEkH,EAAEC,EAAEC;;AANtB,AAAA,gBAAA,ZAMW7H;AANX,AAM6B,OAACiB,qDAAMyJ,qBAAM7H,aAAMpC,EAAEkH,EAAEC,oDAAEC;;;AANtD,CAAA,AAAA,6EAAA,WAAA1C,mBAAAC,3GAAWiF;;AAAX,AAAA,IAAAlF,yBAAA;AAAA,AAAA,GAAA,AAAAE,0BAAA,iFAAA,8DAAA,4EAAAD;AAAA,OAAAE,+CAAA,AAAAC,qBAAA,AAAAC,6CAAA,mCAAAL,wBAAAX,eAAAY;;AAAA,8CAAAwE,cAAA/G,aAAA2B,cAAA,AAAAiB,oBAAA,AAAAH,+CAAArC,gBAAAmC,kBAAA,hLAAWiF;;;;AAAX,CAAA,AAAA,kGAAA,WAAA3E,mBAAAgE,hIAAWW;;AAAX,AAAA,IAAA3E,yBAAA;AAAA,AAAA,IAAAwE,WAAAR;IAAAQ,eAAA,EAAA,CAAAA,oBAAAtH,oBAAA,AAAAsH,aAAA;AAAA,AAAA,QAAAA;KAAA;KAAA;AAAA;;;;AAAA,OAAA7E,0BAAApC,gBAAAyG;;;;;AAAA,CAAA,AAAA,oFAAA,WAAA9D,mBAAAC,gBAAAkE,lIAAWM;;AAAX,AAAA,IAAAzE,yBAAA;AAAA,AAAA,IAAAuE,cAAApE;IAAAqE,cAAAvE;AAAA,AAAA,oBAAA,CAAAsE,4CAAAA,0CAAA,yDAAAC,eAAAD,sBAAA,yDAAAC;AAAA,8CAAAL,SAAAlH,aAAA2B,cAAAvB,gBAAA,tFAAWoH;;AAAX,oBAAA,CAAAF,4CAAAA,0CAAA,wDAAAC,eAAAD,sBAAA,wDAAAC;AAAA,8CAAAR,cAAAG,SAAAvF,cAAAvB,gBAAA,vFAAWoH;;AAAX,8CAAAT,cAAA/G,aAAA2B,cAAA,AAAAyB,8CAAAhD,gBAAA4C,gBAAAkE,UAAA,nKAAWM;;;;;AAAX,CAAA,AAAA,8EAAA,WAAAnE,zFAAWmE;;AAAX,AAAA,IAAAnE,yBAAA;AAAA,AAAA,OAAA7E,cAAA,AAAA4C,+CAAA,mFAAA,KAAAkC,mBAAA,yDAAAyD,cAAA,OAAA,KAAAzD,mBAAA,wDAAAtD,aAAA,eAAAI;;;AAAA,CAAA,AAAA,sFAAA,tFAAWoH,iGAYIrK,MAAKoC,IAAIC;;AAZxB,AAAA,gBAAA,ZAYerC;AAZf,AAYkC,AAAC2K,oBAAU9H,aAAMT,IAAIC;;AACnDrC;;;AAbJ,CAAA,AAAA,yFAAA,zFAAWqK,oGAcOnC,EAAE9F;;AAdpB,AAAA,YAAA,RAckB8F;AAdlB,AAcyB,OAAC0C,uBAAa/H,aAAMT;;;AAd7C,CAAA,AAAA,qFAAA,WAAAgE,mBAAA2D,nHAAWM;;AAAX,AAAA,IAAAjE,yBAAA;AAAA,AAAA,8CAAAwD,cAAA/G,aAAAkH,SAAA9G,gBAAAyB,tFAAW2F;;;AAAX,CAAA,AAAA,kFAAA,WAAAhE,mBAAAC,hHAAW+D;;AAAX,AAAA,IAAAhE,yBAAA;AAAA,AAAA,GAAA,AAAAE,wBAAAD;AAAA,OAAAD,kEAAA,AAAAG,eAAAF,oBAAA,KAAA,AAAAE,eAAAF,oBAAA;;AAAA,OAAAjD,+CAAAoD,gBAAAJ,uBAAAC;;;;AAAA,CAAA,AAAA,8EAAA,9EAAW+D,yFAiBAnC;;AAjBX,AAAA,YAAA,RAiBWA;AAjBX,AAiBc,OAAC5G,gBAAMuB;;;AAjBrB,CAAA,AAAAwH,6CAAA;AAAA,AAAA,AAAA;;;AAAA,CAAA,AAAAA,mDAAA;;AAAA,CAAA,AAAAA,wDAAA,WAAA1D;AAAA,AAAA,YAAAC,eAAA,KAAA,oCAAA,KAAA,IAAA;;;AAAA,CAAA,AAAAyD,2DAAA,WAAA1D,mBAAAE;AAAA,AAAA,OAAAC,iBAAAD,qBAAA;;;AAAA;;;yCAAA,zCAAW2D,0FAAwBZ,OAAc/G;AAAjD,AAAA,YAAAwH,+CAAA,KAAA,KAAA,vBAAmCT,OAAc/G;;;AAAjD;;;4CAAA,oDAAAyH,hGAAWG;AAAX,AAAA,IAAAzD,uBAAA,iBAAAuD,WAAA,AAAAjF,sDAAAgF,SAAA,2GAAA;AAAA,AAAA,GAAA,AAAApD,wBAAAoD;AAAA,OAAA9E,6CAAA,mCAAA+E;;AAAAA;;;AAAA,AAAA,YAAAF,kCAAA,AAAA,uFAAAC,UAAA,AAAA,sFAAAA,UAAA,KAAA,AAAA7E,oBAAAuB,sBAAA;;;AAAAqD,AAoBH,AAAA,CAAA,AAAA,6EAAAhC,7EAAagC;;AAAb,CAAA,AAAA,AAAaA,mGAEX,WAAYrK,MAAKC;AAAjB,AAAA,gBAAA,ZAAYD;AAAZ,AAAwB,OAACX,oCAAU,AAAUW,iBAAMC;;;AAFrD,CAAA,AAAA,AAAaoK,+FAGX,WAAQrK;AAAR,AAAA,gBAAA,ZAAQA;AAAR,AAAc,OAACN,gCAAM,AAAUM;;;AAHjC,CAAA,AAAA,AAAaqK,kGAIX,WAAWrK;AAAX,AAAA,gBAAA,ZAAWA;AAAX,AAAiB,OAACJ,mCAAS,AAAUI;;;AAJvC,CAAA,AAAA,AAAaqK,wGAKX,WAAiBrK,MAAKE;AAAtB,AAAA,gBAAA,ZAAiBF;AAAjB,AAAiC,OAACkJ,sBAAOlJ,UAAKE;;AAGhD,AAAA;;;;;;qCAAA,6CAAAiJ,lFAAM2B;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,iEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,iEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAxB,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,mEAAA,nEAAMwB,8EAKFlB;AALJ,AAKY,+EAAA,xEAACmB,iEAAcnB;;;AAL3B,CAAA,mEAAA,nEAAMkB,8EAMFlB,OAAOJ;AANX,AAM0B,OAACgB,uCAAeZ,OAAO,AAACH,6CAAKD;;;AANvD,CAAA,6DAAA,7DAAMsB;;AAAN,AASA,AAOA,AAkBA,AAUA,AAYA,sCAAA,tCAAME,oFAAUC;AAAhB,AACE,IAAAC,oBAAK,EAAA,GAAA,MAAA,SAAA,EAAA,EAAA,WAAA,CAAA7C,gCAAA,qCAAA,KAAA,EAAA,EAAA,uCAAA,AAAA8C,mEAAA,QAAA,AAAAA,zCAAYpL,2EAAAA,hQAASkL,8DAAAA,8CAAAA,uGAAAA,2EAAAA;AAA1B,AAAA,GAAAC;AACE,qBAAWE,bAAMH;;AADnBC;;;AAGF,AAKA,AAAA,+BAAAG,/BAAOS;;AAAP,AAAAR,gDAAA,wCAAA,4DAAA,kDAAA,yDAAA,8DAAA,2DAAA,2DAAA,0DAAA,6DAAA,yEAAA,iEAAA,IAAA,aAAA,AAAA,kBAAAC,cAAAC,aAAAC;AAAA,AAAA,IAAAC,iBAAA,AAAAC,6CAAAJ,cAAA;AAAA,AAAA;;KAAA,IAAA,IAAA,IAAA,IAAA,AAAA,iCAAA,AAAA,sIAAA;AAAA,AAAA;GAAA;;AAAA,AAAAK,gDAAA,wCAAA,4DAAA,kDAAA,yDAAA,8DAAA,2DAAA,2DAAA,0DAAA,6DAAA,yEAAA,iEAAA,IAAA,aAAA,AAAA,kBAAAL,cAAAC,aAAAC;AAAA,AAAA,AAAA,AAAA,OAAAI,uCAAA;;KAAA,IAAA,IAAA,IAAA,IAAA,AAAA,iCAAA,AAAA,wIAAA;AAAA,AAAA;GAAA;AAIA,gCAAA,hCAAME,wEAAUC;AAAhB,AACE,GAAQ,OAASA;AAAjB;AAAA,AAAA,MAAA,KAAA1C,MAAA;;;AACA,QAAA,IAAS,kCAAA,OAAA,zCAAC2C,6BAAkBD;;AAE9B,AAOG,AAEE,iCAAA,jCAAME,0EAAWC;AAAjB,AACE,IAAMC,cAAO,6CAAA,7CAAC3C;IACR4C,gBAAS,6CAAA,7CAAC5C;AADhB,AAEE,sDAAShJ;AAAT,AACE,oBAAA,AAAAa,gBAAK+K;AACH,OAACnD,sBAAOkD,YAAO3L;;AACf,AAAI,oCAAA,pCAACyI,sBAAOmD;;AACR,CAAC5L,kCAAAA,oCAAAA;;AACD,OAAa6L,kBAAU;AAAA,AAAO,oCAAA,pCAACpD,sBAAOmD;;AACb,IAAA1K,qBAAA,AAAAL,gBAAkB8K;AAAlB,AAAA,oBAAAzK;AAAA,AAAA,YAAAA,RAAW4K;AAAX,AACE,kCAAA,lCAACrD,sBAAOkD;;AACR,OAACI,qCAAID;;AAFP;;GAGvBJ;;;;;AAKd,IAAMM,iBAAS,+BAAA,/BAACP;AAAhB,AACE,0CAAA,1CAAMQ,4FAAeV;AAArB,AAA2B,sBAAA,fAACS;AAAD,AAAW,wDAAA,jDAAeE,4BAAkB,AAAA,AAAIL,wBAA8B,AAACP,8BAASC;;;;AAQrH,AAAKY,yCAAkB,AAACC,gDAAQnC,qBAAM,AAACjB,6CAAK,cAAA,bAAG,AAAMqD,qBAAeC;;AAEpE,6CAAA,7CAAMC,kGAAkBC,cAAcjB;AAAtC,AAA4C,gCAAA,8BAAA,vDAAYW,uCAAgCM,mBAAkB,AAAClB,8BAASC;;;AACpH,wCAAA,xCAAMkB;AAAN,AAAqB,OAAOP;;;AAC5B,2CAAA,3CAAMQ;AAAN,AAAwB,OAAUR;;;AAElC,kCAAA,lCAAMS;AAAN,AACE,IAAMC,MAAI,AAAYf;AAAtB,AACE,oDAAK,AAAYe,0DAAK,AAAUA,wDAAK,AAAQA;;;AAEjD,gCAAA,hCAAOC,wEAAUC,GAAGC;AAApB,AACE,QAAA,JAAOQ;IAAPP,WACgBF;IADhBG,aAAAD;IAAAE,aAAA,AAAAtM,cAAAqM;IAAAE,eAAA,AAAA1L,gBAAAyL;IAAAA,iBAAA,AAAAxL,eAAAwL;QAAAC,JACQjG;aADRgG,TACYJ;AADZ,AAAA,IAAOS,QAAAA;IAAPP,eAAAA;;AAAA,AAAA,IAAOO,QAAAA;IAAPH,aAAAJ;IAAAK,aAAA,AAAAzM,cAAAwM;IAAAE,eAAA,AAAA7L,gBAAA4L;IAAAA,iBAAA,AAAA3L,eAAA2L;YAAAC,RACQpG;aADRmG,TACYP;AADZ,AAEE,GAAM,AAACrI,6CAAEyC,MAAE6F;AAAKQ;;AAAhB,GACM,AAAC3M,cAAIkM;AAAI,eAAO,SAAA,RAAKS;eAAGT;;;;;AAD9B,AAAA;;;;;;;;AAIJ,AAAA,AAAA,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,gFAAA,WAAAjL,mBAAAC,9GAAWuM;;AAAX,AAAA,IAAAxM,yBAAA;AAAA,AAAA,OAAAA,8DAAAC,gBAAA;;;AAAA,CAAA,AAAA,gFAAA,WAAAC,mBAAAyL,OAAAvL,rHAAWoM;;AAAX,AAAA,IAAAtM,yBAAA;AAAA,AAAA,IAAA0L,WAAAD;IAAAC,eAAA,EAAA,CAAAA,oBAAAtL,oBAAA,AAAAsL,aAAA;AAAA,AAAA,QAAAA;KAAA;AAAAC;;;KAAA;AAAAC;;;KAAA;AAAAC;;;;AAAA,OAAArL,4CAAAC,gBAAAgL,OAAAvL;;;;;AAAA,CAAA,AAAA,qFAAA,WAAAQ,mBAAAC,gBAAAC,nIAAW0L;;AAAX,AAAA,IAAA5L,yBAAA;AAAA,AAAA,OAAAG,+CAAA,WAAAC,kBAAAgL;AAAA,AAAA,IAAAC,aAAAD;IAAA7K,kBAAA,AAAApD,4CAAAkO,WAAA,IAAA;IAAA7K,kBAAA,AAAArD,4CAAAkO,WAAA,IAAA;AAAA,AAAA,QAAApL,gDAAAA,8CAAAG,kBAAAG,gBAAAC,mBAAAP,0BAAAG,kBAAAG,gBAAAC;GAAAN,mBAAAF;;;AAAA,CAAA,AAAA,4FAAA,WAAAS,mBAAAC,qBAAAC,/IAAWiL;;AAAX,AAAA,IAAAnL,yBAAA;AAAA,AAAA,IAAAG,wBAAA,WAAAC;AAAA,AAAA,OAAAC,+BAAAJ,qBAAA,oBAAA,GAAA,IAAA,GAAAC,mBAAAE;;AAAA,AAAA,OAAAC,+BAAAJ,qBAAAE,sBAAA,sCAAA,KAAA,IAAAD,mBAAA,AAAAI,+CAAA,mFAAA,KAAAC,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,yDAAAiK,oBAAA,OAAA,KAAAjK,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,0DAAAkK,oBAAA,OAAA,KAAAlK,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,gEAAAmK,uBAAA,eAAApL;;;AAAA,CAAA,AAAA,oFAAA,WAAAuL,/FAAWM;;AAAX,AAAA,IAAAN,eAAA;AAAA,AAAA,YAAApK,qBAAA,IAAAoK,aAAA,EAAA,mFAAA,yDAAA,0DAAA,wEAAA,kBAAAvL,iBAAA,AAAAoB,oBAAApB,iBAAA,AAAAqB;;;AAAA,CAAA,AAAA,4EAAA,WAAAC,vFAAWuK;;AAAX,AAAA,IAAAvK,yBAAA;AAAA,AAAAC;;;AAAA,CAAA,AAAA,kFAAA,WAAAC,7FAAWqK;;AAAX,AAAA,IAAArK,yBAAA;AAAA,AAAA,8CAAA0J,mBAAAC,mBAAAC,sBAAA7J,cAAAvB,gBAAAyB,5HAAWoK;;;AAAX,CAAA,AAAA,gFAAA,WAAAnK,3FAAWmK;;AAAX,AAAA,IAAAnK,yBAAA;AAAA,AAAA,QAAA,IAAA,AAAA3C,gBAAAiB;;;AAAA,CAAA,AAAA,4EAAA,WAAA2B,vFAAWkK;;AAAX,AAAA,IAAAlK,yBAAA;AAAA,AAAA,IAAAC,kBAAAH;AAAA,AAAA,GAAA,GAAA,CAAAG,mBAAA;AAAAA;;AAAA,IAAAA,sBAAA,AAAA,WAAAC;AAAA,AAAA,QAAA,aAAA,AAAAC,8BAAAD;GAAAF;AAAA,AAAA,CAAAF,gBAAAG;;AAAAA;;;;AAAA,CAAA,AAAA,8EAAA,WAAA4J,UAAAC,nGAAWI;;AAAX,AAAA,IAAAL,gBAAA;AAAA,AAAA,SAAA,GAAA,CAAAC,cAAA,aAAA,EAAA,CAAA,AAAAD,8BAAA,AAAAC,6BAAA,EAAA,AAAAxJ,6CAAA,AAAAuJ,0BAAA,AAAAC,6BAAA,EAAA,AAAAxJ,6CAAA,AAAAuJ,0BAAA,AAAAC,6BAAA,EAAA,AAAAxJ,6CAAA,AAAAuJ,6BAAA,AAAAC,gCAAA,AAAAxJ,6CAAA,AAAAuJ,uBAAA,AAAAC;;;AAAA,CAAA,AAAA,oFAAA,pFAAWI,+FAWC9O,MAAKmB;;AAXjB,AAAA,gBAAA,ZAWYnB;AAXZ,AAWyB,OAAQA,mDAAK,AAAC+H,qBAAW5G;;;AAXlD,CAAA,AAAA,kFAAA,lFAAW2N,6FAGA9O,MAAKS;;AAHhB,AAAA,gBAAA,ZAGWT;AAHX,AAGmB,IAAAmP,aAAuB,AAAC9H,wDAAW8G,mBAAO1N;cAA1C,AAAAJ,4CAAA8O,WAAA,IAAA,rEAAOC;aAAP,AAAA/O,4CAAA8O,WAAA,IAAA,pEAAehO;AAAf,AACE,AAACuL,wCAAcvL;;AACfA;;;AALrB,CAAA,AAAA,kFAAA,lFAAW2N,6FAMA9O,MAAKS,EAAE6G;;AANlB,AAAA,gBAAA,ZAMWtH;AANX,AAMuB,0DAAA,WAAAqP,9DAAQrP;AAAR,AAAc,0EAAAqP,oCAAAA,tGAAC5O,kCAAAA,wDAAAA,PAAI6G,oCAAAA;;;;AAN1C,CAAA,AAAA,kFAAA,lFAAWwH,6FAOA9O,MAAKS,EAAE+G,KAAKC;;AAPvB,AAAA,gBAAA,ZAOWzH;AAPX,AAO6B,0DAAA,WAAAsP,9DAAQtP;AAAR,AAAc,0EAAAsP,0CAAAA,5GAAC7O,kCAAAA,8DAAAA,bAAI+G,0CAAAA,rCAAKC,0CAAAA;;;;AAPrD,CAAA,AAAA,kFAAA,lFAAWqH,6FAQA9O,MAAKS,EAAEkH,EAAEC,EAAEC;;AARtB,AAAA,gBAAA,ZAQW7H;AARX,AAQ4B,0DAAA,WAAAuP,9DAAQvP;AAAR,AAAc,uDAAAuP,hDAACtO,8CAAMR,mBAAIkH,EAAEC,EAAEC;;;;AARzD,CAAA,AAAA,6EAAA,WAAA1C,mBAAAC,3GAAW0J;;AAAX,AAAA,IAAA3J,yBAAA;AAAA,AAAA,GAAA,AAAAE,0BAAA,iFAAA,8DAAA,+DAAA,oFAAAD;AAAA,OAAAE,+CAAA,AAAAC,qBAAA,AAAAC,6CAAA,mCAAAL,wBAAAX,eAAAY;;AAAA,8CAAA+I,mBAAAC,mBAAAC,sBAAA7J,cAAA,AAAAiB,oBAAA,AAAAH,+CAAArC,gBAAAmC,kBAAA,jNAAW0J;;;;AAAX,CAAA,AAAA,kGAAA,WAAApJ,mBAAAuI,hIAAWa;;AAAX,AAAA,IAAApJ,yBAAA;AAAA,AAAA,IAAAiJ,WAAAV;IAAAU,eAAA,EAAA,CAAAA,oBAAA/L,oBAAA,AAAA+L,aAAA;AAAA,AAAA,QAAAA;KAAA;KAAA;KAAA;AAAA;;;;AAAA,OAAAtJ,0BAAApC,gBAAAgL;;;;;AAAA,CAAA,AAAA,oFAAA,WAAArI,mBAAAC,gBAAA2I,lIAAWM;;AAAX,AAAA,IAAAlJ,yBAAA;AAAA,AAAA,IAAAgJ,cAAA7I;IAAA8I,cAAAhJ;AAAA,AAAA,oBAAA,CAAA+I,4CAAAA,0CAAA,yDAAAC,eAAAD,sBAAA,yDAAAC;AAAA,8CAAAL,SAAAJ,mBAAAC,sBAAA7J,cAAAvB,gBAAA,lHAAW6L;;AAAX,oBAAA,CAAAF,4CAAAA,0CAAA,0DAAAC,eAAAD,sBAAA,0DAAAC;AAAA,8CAAAV,mBAAAK,SAAAH,sBAAA7J,cAAAvB,gBAAA,lHAAW6L;;AAAX,oBAAA,CAAAF,4CAAAA,0CAAA,gEAAAC,eAAAD,sBAAA,gEAAAC;AAAA,8CAAAV,mBAAAC,mBAAAI,SAAAhK,cAAAvB,gBAAA,/GAAW6L;;AAAX,8CAAAX,mBAAAC,mBAAAC,sBAAA7J,cAAA,AAAAyB,8CAAAhD,gBAAA4C,gBAAA2I,UAAA,pMAAWM;;;;;;AAAX,CAAA,AAAA,8EAAA,WAAA5I,zFAAW4I;;AAAX,AAAA,IAAA5I,yBAAA;AAAA,AAAA,OAAA7E,cAAA,AAAA4C,+CAAA,mFAAA,KAAAkC,mBAAA,yDAAAgI,mBAAA,OAAA,KAAAhI,mBAAA,0DAAAiI,mBAAA,OAAA,KAAAjI,mBAAA,gEAAAkI,sBAAA,eAAApL;;;AAAA,CAAA,AAAA,sFAAA,tFAAW6L,iGAcI9O,MAAKoC,IAAIC;;AAdxB,AAAA,gBAAA,ZAcerC;AAdf,AAeI,AAAC2K,oBAAUwD,mBAAO/L,IAAIC;;AACtBrC;;;AAhBJ,CAAA,AAAA,yFAAA,zFAAW8O,oGAiBO5G,EAAE9F;;AAjBpB,AAAA,YAAA,RAiBkB8F;AAjBlB,AAiByB,OAAC0C,uBAAauD,mBAAO/L;;;AAjB9C,CAAA,AAAA,qFAAA,WAAAgE,mBAAAoI,nHAAWM;;AAAX,AAAA,IAAA1I,yBAAA;AAAA,AAAA,8CAAA+H,mBAAAC,mBAAAC,sBAAAG,SAAAvL,gBAAAyB,vHAAWoK;;;AAAX,CAAA,AAAA,6EAAAzG,7EAAWyG;;AAAX,CAAA,AAAA,mGAAA,nGAAWA,8GAuBG9O,MAAKC;;AAvBnB,AAAA,gBAAA,ZAuBcD;AAvBd,AAwBI,0BAAA,AAAAsB,tBAAMkO,sCAAenB;IACfpB,sBAAc,AAACL;AADrB,AAEE,AAAC5E,mDAAMoG,mBAAO,WAAKqB;AAAL,AACE,IAAMC,QAAM,AAACpC,8BAASmC,MAAMD;AAA5B,AACE,IAAAG,WAAMD;AAAN,AAAA,QAAAC;KAAA;AACK,OAACnH,6CAAKiH,MAAMxC;;;;AACf,OAACzE,6CAAK,qDAAA,rDAACC,+CAAOgH,UAAQ,SAAA,RAAKC,cAAQzC;;;;;AACvD,AAAC/D,sBAAOmF,sBAAUpB;;AAClB,AAACD,2CAAiBC,oBAAchN;;AAClC,OAACiJ,sBAAO,AAAUlJ,sBAAMC;;;AAjC5B,CAAA,AAAA,+FAAA,/FAAW6O,0GAkCa9O;;AAlCxB,AAAA,gBAAA,ZAkCwBA;AAlCxB,AAmCI,AAACkN;;AACD,AAAClF,mDAAMqG,sBAAU,WAAKuB,IAAIH;AAAT,AACE,IAAMC,QAAM,AAACpC,8BAASmC,MAAMG;AAA5B,AACE,GAAI,6CAAA,7CAAC1K,iDAAIwK;AAAOE;;AAAI,OAAC5M,4CAAIyM,MAAM,SAAA,RAAKC;;GAFzD,AAAApO,gBAGG8M;;AACH,OAAClF,sBAAO,AAAUlJ,sBAAM,AAACoN;;;AAxC7B,CAAA,AAAA,kGAAA,lGAAW0B,6GAyCgB9O;;AAzC3B,AAAA,gBAAA,ZAyC2BA;AAzC3B,AA0CI,AAACmN;;AACD,AAACnF,mDAAMqG,sBAAU,WAAKuB,IAAIH;AAAT,AACE,IAAMC,QAAM,AAACpC,8BAASmC,MAAMG;AAA5B,AACE,GAAI,AAAC1K,6CAAEwK,MAAM,0BAAA,zBAAK,AAAC1N,gBAAMyN;AAASG;;AAAI,OAAC5M,4CAAIyM,MAAM,SAAA,RAAKC;;GAF3E,AAAApO,gBAGG8M;;AACH,OAAClF,sBAAO,AAAUlJ,sBAAM,AAACoN;;;AA/C7B,CAAA,AAAA,wGAAA,xGAAW0B,mHAgDQ9O,MAAKE;;AAhDxB,AAAA,gBAAA,ZAgDmBF;AAhDnB,AAiDI,OAACkJ,sBAAOlJ,UAAKE;;;AAjDjB,CAAA,AAAA,kFAAA,WAAAmG,mBAAAC,hHAAWwI;;AAAX,AAAA,IAAAzI,yBAAA;AAAA,AAAA,GAAA,AAAAE,wBAAAD;AAAA,OAAAD,kEAAA,AAAAG,eAAAF,oBAAA,KAAA,AAAAE,eAAAF,oBAAA;;AAAA,OAAAjD,+CAAAoD,gBAAAJ,uBAAAC;;;;AAAA,CAAA,AAAA,8EAAA,9EAAWwI,yFAoBA5G;;AApBX,AAAA,YAAA,RAoBWA;AApBX,AAAA,OAAA5G,gBAoBe6M;;;AApBf,CAAA,AAAAW,6CAAA;AAAA,AAAA,AAAA;;;AAAA,CAAA,AAAAA,mDAAA;;AAAA,CAAA,AAAAA,wDAAA,WAAAnI;AAAA,AAAA,YAAAC,eAAA,KAAA,oCAAA,KAAA,IAAA;;;AAAA,CAAA,AAAAkI,2DAAA,WAAAnI,mBAAAE;AAAA,AAAA,OAAAC,iBAAAD,qBAAA;;;AAAA;;;yCAAA,zCAAWoI,0FAAcd,YAAOC,YAAOC;AAAvC,AAAA,YAAAS,yEAAA,KAAA,KAAA,jDAAyBX,YAAOC,YAAOC;;;AAAvC;;;4CAAA,oDAAAU,hGAAWG;AAAX,AAAA,IAAAlI,uBAAA,iBAAAgI,WAAA,AAAA1J,sDAAAyJ,SAAA,2GAAA,0DAAA;AAAA,AAAA,GAAA,AAAA7H,wBAAA6H;AAAA,OAAAvJ,6CAAA,mCAAAwJ;;AAAAA;;;AAAA,AAAA,YAAAF,kCAAA,AAAA,uFAAAC,UAAA,AAAA,wFAAAA,UAAA,AAAA,8FAAAA,UAAA,KAAA,AAAAtJ,oBAAAuB,sBAAA;;;AAAA8H;AAwDA,qCAAA,rCAAMe;AAAN,AAcE,IAAMC,WAAU,iBAAAC,mBAAI,iBAAApO,qBAAiB,AAAA,AAAI2K;AAArB,AAAA,oBAAA3K;AAAA,AAAA,YAAAA,RAAWkB;AAAX,AACE,OAAYA;;AADd;;;AAAJ,AAAA,oBAAAkN;AAAAA;;AAEE,OAACnD;;;IACb6C,QAAU,iBAAAO,qBAAe,AAAA,8BAAA,9BAAI1D;AAAnB,AAAA,oBAAA0D;AAAA,YAAAA,RAASC;AAAT,AACE,OAACC,sDAAgBD;;AADnB,0FAEGH;;;IACbzB,iBAAU,AAAC5E,6CAAKqG;IAChB1B,cAAU,AAAC3E,6CAAKgG;AAPtB,AAQE,4BAAA,yBAAA,rDAAe,AAAWnD,0CAAyBwD;;AACnD,gCAAA,hCAACnF,oBAAUyD,yGAAe,WAAKlG,EAAEA,MAAEA,MAAEuH;AAAX,AAAkB,OAAA,8BAAA,9BAAInD,0DAA+D,AAAC6D,wGAAOV;;;AACvH,OAACR,uCAAe,AAACxF,6CAAK,AAAC2D,mCAAagB,YAAOC;;;AAG/C,gDAAA,hDAAM+B,wGAAwCpQ;AAA9C,AAAoD,OAAUA;;;AAE9D,iCAAA,jCAAMqQ,0EAAWZ,MAAMD,cAAcc;AAArC,AACE,QAAG,AAAChD,8BAASmC,MAAMa,iBAAe,AAAChD,8BAASmC,MAAMD","names":["hyperfiddle$history2$IHistory$navigate_BANG_$dyn","x__5346__auto__","m__5347__auto__","hyperfiddle.history2/navigate!","goog/typeOf","m__5345__auto__","cljs.core/missing-protocol","hyperfiddle$history2$IHistory$back_BANG_$dyn","hyperfiddle.history2/back!","hyperfiddle$history2$IHistory$forward_BANG_$dyn","hyperfiddle.history2/forward!","hyperfiddle$history2$IHistory$replace_state_BANG_$dyn","hyperfiddle.history2/replace-state!","hyperfiddle.history2/IHistory","this","route","new-state","p__34747","vec__34748","cljs.core.nth","hyperfiddle.history2/updatef","history","idx","f","cljs.core.update","p__34765","vec__34766","hyperfiddle.history2/notify-watches","oldstate","newstate","oldval","cljs.core.apply","cljs.core/get","newval","seq__34770","cljs.core/seq","cljs.core/deref","chunk__34771","count__34772","i__34773","vec__34782","temp__5816__auto__","cljs.core/chunked-seq?","c__5521__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__34790","cljs.core/first","cljs.core/next","key","callback","this__5296__auto__","k__5297__auto__","this__5298__auto__","k34803","else__5299__auto__","G__34815","cljs.core/Keyword","state","watches","max-size","cljs.core.get","__extmap","this__5316__auto__","f__5317__auto__","init__5318__auto__","cljs.core.reduce","ret__5319__auto__","p__34816","vec__34817","k__5320__auto__","v__5321__auto__","this__5311__auto__","writer__5312__auto__","opts__5313__auto__","pr-pair__5314__auto__","keyval__5315__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__34802","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__5294__auto__","__meta","this__5291__auto__","__hash","this__5300__auto__","this__5292__auto__","h__5107__auto__","coll__5293__auto__","cljs.core/hash-unordered-coll","this34804","other34805","cljs.core._EQ_","this__5306__auto__","k__5307__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__5303__auto__","G__34820","this__5304__auto__","k__5305__auto__","pred__34821","cljs.core/keyword-identical?","expr__34822","cljs.core.assoc","this__5309__auto__","cljs.core/MapEntry","this__5295__auto__","this__5301__auto__","entry__5302__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","hyperfiddle.history2/AtomHistory","this__5342__auto__","cljs.core/List","writer__5343__auto__","cljs.core/-write","G__34808","extmap__5338__auto__","G__34827","cljs.core/record?","hyperfiddle.history2/->AtomHistory","hyperfiddle.history2/map->AtomHistory","cljs.core.swap_vals_BANG_","arg","p1__34799#","arg1","arg2","p1__34800#","x","y","args","p1__34801#","cljs.core/constantly","cljs.core.swap_BANG_","cljs.core/assoc","_","cljs.core/dissoc","vec__34824","cljs.core/PROTOCOL_SENTINEL","p__34828","vec__34829","cljs.core.conj","cljs.core.subvec","p__34832","vec__34833","x__5083__auto__","y__5084__auto__","p__34836","vec__34837","x__5086__auto__","y__5087__auto__","cljs.core/reset!","var_args","G__34841","hyperfiddle.history2/atom-history","js/Error","hyperfiddle.history2.atom_history","initial-state","cljs.core.atom","k34843","G__34847","parent","p__34848","vec__34849","G__34842","this34844","other34845","G__34852","pred__34853","expr__34854","hyperfiddle.history2/ProxyHistory","G__34846","G__34856","hyperfiddle.history2/->ProxyHistory","hyperfiddle.history2/map->ProxyHistory","cljs.core/swap!","cljs.core/add-watch","cljs.core/remove-watch","G__34858","hyperfiddle.history2/proxy-history","hyperfiddle.history2.proxy_history","hyperfiddle.history2/history?","h","and__4996__auto__","cljs.core/native-satisfies?","cljs.core/IAtom","hyperfiddle.electric.impl.lang/electric-only","hyperfiddle.history2/history_hf_client_server","history-frame","history-vars","history-env","history-expr-0","hyperfiddle.electric.impl.runtime/make-input","hyperfiddle.history2/history_hf_client_client","hyperfiddle.electric.impl.runtime/pure","hyperfiddle.history2/history","hyperfiddle.history2/absolute","path","clojure.string/replace-first","hyperfiddle.history2/throttler","rate-ms","!nextf","!running","js/window","nextf","rec","throttle","hyperfiddle.history2/replaceState!","js/window.history","hyperfiddle.history2/history-entry-uid","cljs.core.partial","js/Date","cljs.core/inc","hyperfiddle.history2/html5-pushState!","next-position","hyperfiddle.history2/html5-back!","hyperfiddle.history2/html5-forward!","hyperfiddle.history2/html5-path","loc","hyperfiddle.history2/index-of","xs","val","G__34866","vec__34867","seq__34868","first__34869","vec__34870","seq__34871","first__34872","i","k34874","G__34878","!state","!stack","!position","p__34879","vec__34880","G__34873","this34875","other34876","G__34886","pred__34887","expr__34888","hyperfiddle.history2/HTML5History","G__34877","G__34891","hyperfiddle.history2/->HTML5History","hyperfiddle.history2/map->HTML5History","vec__34883","_oldval","p1__34860#","p1__34861#","p1__34862#","prev-position","stack","index","G__34890","pos","hyperfiddle.history2/html5-history","position","or__4998__auto__","temp__5814__auto__","array","clojure.edn.read_string","cljs.core.pr_str","hyperfiddle.history2/-html5-history-get-state","hyperfiddle.history2/nav-delta","curr-position"],"sourcesContent":["(ns hyperfiddle.history2\r\n  (:require\r\n   [clojure.edn :as edn]\r\n   [clojure.string :as str]\r\n   [contrib.cljs-target :refer [do-browser]]\r\n   [hyperfiddle.electric :as e]\r\n   [hyperfiddle.electric-dom2 :as dom]\r\n   [hyperfiddle.rcf :as rcf :refer [tests % tap with]]\r\n   [missionary.core :as m]\r\n   )\r\n  #?(:clj (:import [clojure.lang IRef IAtom]))\r\n  #?(:cljs (:require-macros hyperfiddle.history2))\r\n  )\r\n\r\n(comment\r\n  (rcf/enable! true))\r\n\r\n;;; History\r\n\r\n(defprotocol IHistory\r\n  (navigate! [this route])\r\n  (back! [this])\r\n  (forward! [this])\r\n  (replace-state! [this new-state]))\r\n\r\n(declare notify-watches)\r\n\r\n(defn updatef [[history idx] f] [(update history idx f) idx])\r\n\r\n#?(:clj\r\n   (defrecord AtomHistory [^IAtom state watches max-size]\r\n     IAtom\r\n     (swap [this f]           (notify-watches this (swap-vals! state updatef f)))\r\n     (swap [this f arg]       (.swap this #(f % arg)))\r\n     (swap [this f arg1 arg2] (.swap this #(f % arg1 arg2)))\r\n     (swap [this f x y args]  (.swap this #(apply f % x y args)))\r\n     (reset [this newval]     (.swap this (constantly newval)))\r\n     (compareAndSet [this oldv newv]\r\n       (loop []\r\n         (let [refv (deref this)]\r\n           (if (not= oldv refv)\r\n             false\r\n             (or (compare-and-set! state refv (updatef refv (constantly newv)))\r\n               (recur))))))\r\n\r\n     IRef\r\n     (setValidator [_ _] (throw (UnsupportedOperationException. \"History does not support validators\")))\r\n     (getValidator [_] (throw (UnsupportedOperationException. \"History does not support validators\")))\r\n     (getWatches [_] (deref watches))\r\n     (addWatch [this key callback]\r\n       (swap! watches assoc key callback)\r\n       this)\r\n     (removeWatch [_ key] (swap! watches dissoc key))\r\n     (deref [_] (let [[history idx] @state]\r\n                  (get history idx)))\r\n     ))\r\n\r\n(defn notify-watches [this [oldstate newstate]]\r\n  (let [oldval (apply get oldstate)\r\n        newval (apply get newstate)]\r\n    (doseq [[key callback] @(:watches this)]\r\n      (callback key this oldval newval))))\r\n\r\n;; (add-watch (atom 0) ::key (constantly true))\r\n\r\n#?(:clj (defmethod print-method AtomHistory [x w] (print-dup x w)))\r\n\r\n#?(:cljs\r\n   (defrecord AtomHistory [state watches max-size]\r\n     IAtom\r\n     ISwap\r\n     (-swap! [this f]           (notify-watches this (swap-vals! state updatef f)))\r\n     (-swap! [this f arg]       (-swap! this #(f % arg)))\r\n     (-swap! [this f arg1 arg2] (-swap! this #(f % arg1 arg2)))\r\n     (-swap! [this f x y args]  (-swap! this #(apply f % x y args)))\r\n\r\n     IReset\r\n     (-reset! [this newval]     (-swap! this (constantly newval)))\r\n\r\n     IWatchable\r\n     (-add-watch [this key callback]\r\n       (swap! watches assoc key callback)\r\n       this)\r\n     (-remove-watch [_ key] (swap! watches dissoc key))\r\n\r\n     IDeref\r\n     (-deref [_] (let [[history idx] @state]\r\n                  (get history idx)))\r\n     ))\r\n\r\n(extend-type AtomHistory\r\n  IHistory\r\n  (navigate! [this route]\r\n    (notify-watches this\r\n      (swap-vals! (.-state this)\r\n        (fn [[history idx]]\r\n          (if (= (count history) (.-max-size this)) ; TODO use a ring data structure for O(1) ops\r\n            [(conj (subvec history 1)           route)      idx]\r\n            [(conj (subvec history 0 (inc idx)) route) (inc idx)])))))\r\n  (back! [this]\r\n    (notify-watches this\r\n      (swap-vals! (.-state this) (fn [[history idx]] [history (max (dec idx) 0)]))))\r\n  (forward! [this] (notify-watches this\r\n                     (swap-vals! (.-state this) (fn [[history idx]] [history (min (inc idx) (dec (count history)))]))))\r\n  (replace-state! [this new-state] (reset! this new-state)))\r\n\r\n\r\n(defn atom-history\r\n  \"Return a new IHistory instance backed by an atom.\r\n  Initial history state can be provided with `initial-state`.\r\n  Default history size is unbounded and can be constrained to `max-size` elements in a FIFO way.\r\n  A negative value or 0 has no effect.\"\r\n  ([] (atom-history nil 0))\r\n  ([initial-state] (atom-history initial-state 0))\r\n  ([initial-state max-size] (->AtomHistory (atom [[initial-state] 0]) (atom {}) max-size)))\r\n\r\n#?(:clj\r\n   (defrecord ProxyHistory [parent ^IAtom state]\r\n     IAtom\r\n     (swap [this f]           (swap! state f))\r\n     (swap [this f arg]       (swap! state f arg))\r\n     (swap [this f arg1 arg2] (swap! state f arg1 arg2))\r\n     (swap [this f x y args]  (apply swap! state f x y args))\r\n     (reset [this newval]     (reset! state newval))\r\n     (compareAndSet [this oldv newv] (compare-and-set! state oldv newv))\r\n\r\n     IRef\r\n     (setValidator [_ _] (throw (UnsupportedOperationException. \"History does not support validators\")))\r\n     (getValidator [_] (throw (UnsupportedOperationException. \"History does not support validators\")))\r\n     (getWatches [_] (.getWatches state))\r\n     (addWatch [this key callback] (add-watch state key callback) this)\r\n     (removeWatch [_ key] (remove-watch state key))\r\n     (deref [_] (deref state))\r\n     ))\r\n\r\n\r\n#?(:clj (defmethod print-method ProxyHistory [x w] (print-dup x w)))\r\n\r\n#?(:cljs\r\n   (defrecord ProxyHistory [^IHistory parent ^IAtom state]\r\n     IAtom\r\n     ISwap\r\n     (-swap! [this f]           (swap! state f))\r\n     (-swap! [this f arg]       (swap! state f arg))\r\n     (-swap! [this f arg1 arg2] (swap! state f arg1 arg2))\r\n     (-swap! [this f x y args]  (apply swap! state f x y args))\r\n\r\n     IReset\r\n     (-reset! [this newval]     (reset! state newval))\r\n\r\n     IWatchable\r\n     (-add-watch [this key callback] (add-watch state key callback)\r\n       this)\r\n     (-remove-watch [_ key] (remove-watch state key))\r\n\r\n     IDeref\r\n     (-deref [_] (deref state))\r\n     ))\r\n\r\n(extend-type ProxyHistory\r\n  IHistory\r\n  (navigate! [this route] (navigate! (.-parent this) route))\r\n  (back! [this] (back! (.-parent this)))\r\n  (forward! [this] (forward! (.-parent this)))\r\n  (replace-state! [this new-state] (reset! this new-state)))\r\n\r\n\r\n(defn proxy-history\r\n  \"Return a new IHistory instance backed by an atom.\r\n  History state is stored in an atom.\r\n  Navigation is forwarded to the `parent` history.\r\n  Initial state is provided with `initial-state`. \"\r\n  ([parent] (proxy-history parent nil))\r\n  ([parent initial-state] (->ProxyHistory parent (atom initial-state)))) ; keep state local, not in url\r\n\r\n\r\n(tests\r\n  \"navigate\"\r\n  (let [h (atom-history)]\r\n    @h := nil\r\n    (navigate! h :a)\r\n    @h := :a))\r\n\r\n(tests\r\n  \"back and forth\"\r\n  (let [h (atom-history)]\r\n    @h := nil\r\n    (navigate! h :a)\r\n    (navigate! h :b)\r\n    @h := :b\r\n    (back! h)\r\n    @h := :a\r\n    (back! h)\r\n    @h := nil\r\n    (forward! h)\r\n    @h := :a\r\n    (navigate! h :c)\r\n    @h := :c\r\n    (forward! h)\r\n    @h := :c))\r\n\r\n(tests\r\n  \"replace-state\"\r\n  (let [h (atom-history)]\r\n    @h := nil\r\n    (replace-state! h :a)\r\n    @h := :a\r\n    (navigate! h :b)\r\n    @h := :b\r\n    (replace-state! h :a)))\r\n\r\n(tests\r\n  \"max-size and initial value\"\r\n  (let [h (atom-history :init 1)]\r\n    @h := :init\r\n    (navigate! h :a)\r\n    @h := :a\r\n    (navigate! h :b)\r\n    @h := :b\r\n    (back! h)\r\n    @h := :b\r\n    ))\r\n\r\n(defn history? [h]\r\n  (and (satisfies? IHistory h)\r\n    (instance? IAtom h)))\r\n\r\n(tests\r\n  (history? (atom-history)) := true)\r\n\r\n;;; 1. and 2.\r\n\r\n(e/def history nil)                    ; History instance mutable ref\r\n\r\n;; HTML5 integration\r\n\r\n(defn absolute [path]\r\n  (assert (string? path))\r\n  (str \"/\" (str/replace-first path #\"^/+\" \"\")))\r\n\r\n(tests\r\n  (absolute \"foo\")        := \"/foo\"\r\n  (absolute \"/foo\")       := \"/foo\"\r\n  (absolute \"//foo\")      := \"/foo\"\r\n  (absolute \"//foo//bar\") := \"/foo//bar\")\r\n\r\n#?(:cljs\r\n   (do-browser\r\n\r\n     (defn throttler [rate-ms]\r\n       (let [!nextf (atom nil)\r\n             !running (atom false)]\r\n         (fn rec [f]\r\n           (if @!running\r\n             (reset! !nextf f)\r\n             (do (reset! !running true)\r\n                 (f)\r\n                 (.setTimeout js/window (fn [] (reset! !running false)\r\n                                          (when-let [nextf @!nextf]\r\n                                            (reset! !nextf nil)\r\n                                            (rec nextf)))\r\n                   rate-ms))))))\r\n\r\n     ;; User agent limits HistoryAPI to 100 changes / 30s timeframe (https://bugs.webkit.org/show_bug.cgi?id=156115)\r\n     ;; Firefox and Safari log an error and ignore further HistoryAPI calls for security reasons.\r\n     ;; Chrome does the same but can also hang the tab: https://bugs.chromium.org/p/chromium/issues/detail?id=1038223\r\n     (let [throttle (throttler 300)]    ; max 3changes/s, 90/30s\r\n       (defn replaceState! [path] (throttle #(.replaceState js/window.history (.. js/window -history -state) \"\" (absolute path)))))\r\n\r\n     ;; History entries' ids must be unique across page refreshes.\r\n     ;; - A monotonic counter would reset and ids would collide after a refresh.\r\n     ;; - Date.now() is not precise enough, two programatic navigations could happen at the same millisecond.\r\n     ;; - We use a mix of both: monotonic counter seeded by current time * 100.\r\n     ;;   - Supports 100 navigations per millisecond.\r\n     ;;   - doesn't collide after a page refresh.\r\n     (def history-entry-uid (partial swap! (atom (* (.now js/Date) 100)) inc))\r\n\r\n     (defn html5-pushState! [next-position path] (.pushState js/window.history #js{:position next-position} \"\" (absolute path)))\r\n     (defn html5-back! [] (.back js/window.history))\r\n     (defn html5-forward! [] (.forward js/window.history))\r\n\r\n     (defn html5-path []\r\n       (let [loc (.-location js/window)]\r\n         (str (.-pathname loc) (.-search loc) (.-hash loc))))\r\n\r\n     (defn- index-of [xs val]\r\n       (loop [i 0\r\n              [x & xs] xs]\r\n         (cond (= x val) i\r\n               (seq xs) (recur (inc i) xs)\r\n               :else -1)))\r\n\r\n     (defrecord HTML5History [!state !stack !position]\r\n       IAtom\r\n       ISwap\r\n       (-swap! [this f] (let [[_oldval newval] (swap-vals! !state f)]\r\n                          (replaceState! newval)\r\n                          newval))\r\n       (-swap! [this f arg] (-swap! this #(f % arg)))\r\n       (-swap! [this f arg1 arg2] (-swap! this #(f % arg1 arg2)))\r\n       (-swap! [this f x y args] (-swap! this #(apply f % x y args)))\r\n\r\n       IReset\r\n       (-reset! [this newval] (-swap! this (constantly newval)))\r\n\r\n       IWatchable\r\n       (-add-watch [this key callback]\r\n         (add-watch !state key callback)\r\n         this)\r\n       (-remove-watch [_ key] (remove-watch !state key))\r\n\r\n       IDeref\r\n       (-deref [_] @!state)\r\n\r\n       IHistory\r\n       (navigate! [this route]\r\n         (let [prev-position @!position\r\n               next-position (history-entry-uid)]\r\n           (swap! !stack (fn [stack]\r\n                           (let [index (index-of stack prev-position)]\r\n                             (case index\r\n                               -1 (conj stack next-position)\r\n                               (conj (subvec stack 0 (inc index)) next-position)))))\r\n           (reset! !position next-position)\r\n           (html5-pushState! next-position route))\r\n         (reset! (.-!state this) route))\r\n       (back! [^HTML5History this]\r\n         (html5-back!)\r\n         (swap! !position (fn [pos stack]\r\n                            (let [index (index-of stack pos)]\r\n                              (if (= 0 index) pos (get stack (dec index)))))\r\n           @!stack)\r\n         (reset! (.-!state this) (html5-path)))\r\n       (forward! [^HTML5History this]\r\n         (html5-forward!)\r\n         (swap! !position (fn [pos stack]\r\n                            (let [index (index-of stack pos)]\r\n                              (if (= index (dec (count stack))) pos (get stack (inc index)))))\r\n           @!stack)\r\n         (reset! (.-!state this) (html5-path)))\r\n       (replace-state! [this new-state]\r\n         (reset! this new-state))\r\n\r\n       ;; TODO Implement equality so that two HTML5History are always equal. The\r\n       ;;      browser history is a singleton. There is no use case for nested\r\n       ;;      HTML5History instances on the page.\r\n       )\r\n\r\n     (defn html5-history []\r\n       ;; Browser History API forbids to prevent navigation. Use case: prompt user for confirmation of unsaved data loss.\r\n       ;; We must implement it ourselves by reverting the navigation action. However:\r\n       ;;  - navigation direction (back/forward) is not provided.\r\n       ;;  - current position in history is not provided.\r\n       ;; To mitigate, we keep a stack of navigated pages and persist it to\r\n       ;; SessionStorage, so it survives refreshes.\r\n\r\n       ;; \"popstate\" events will contain the current page position, the history\r\n       ;; instance will contain the previous one. Given the stack, the previous\r\n       ;; position and current position, we compute the distance (delta) between the two\r\n       ;; pages (one can jump over multiple pages at once through history).\r\n       ;; We then call History.go(-delta) to revert the navigation.\r\n       ;; See `HTML5-Navigation-Intents`.\r\n       (let [position  (or (when-let [state (.. js/window -history -state)]\r\n                             (.-position state))\r\n                         (history-entry-uid))\r\n             stack     (if-let [array (.. js/window -sessionStorage (getItem \"hyperfiddle_history_stack\"))]\r\n                         (edn/read-string array)\r\n                         [position])\r\n             !position (atom position)\r\n             !stack    (atom stack)]\r\n         (.replaceState (.-history js/window) #js{:position position} nil)\r\n         (add-watch !stack ::stack (fn [_ _ _ stack] (.. js/window -sessionStorage (setItem \"hyperfiddle_history_stack\" (pr-str stack)))))\r\n         (->HTML5History (atom (html5-path)) !stack !position)))\r\n\r\n\r\n     (defn -html5-history-get-state [^HTML5History this] (.-!state this))\r\n\r\n     (defn nav-delta [stack prev-position curr-position]\r\n       (- (index-of stack curr-position) (index-of stack prev-position)))\r\n\r\n     ))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"x_google_ignoreList":[0]}