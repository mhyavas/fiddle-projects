{"version":3,"sources":["contrib/sexpr_router.cljc"],"mappings":";AAKA,AAAA,8BAAA,sCAAAA,pEAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,iEAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,mEAAA,iBAAAG,pFAAMD,8EAAQS;AAAd,AAAA,IAAAP,aAAAD;iBAAA,AAAAE,4CAAAD,WAAA,IAAA,xEAAuBQ;AAAvB,AACE,IAAAC,aAAiBF;IAAjBG,aAAA,AAAAC,cAAAF;IAAAG,eAAA,AAAAR,gBAAAM;IAAAA,iBAAA,AAAAL,eAAAK;QAAAE,JAAOC;WAAPH,PAAWI;AAAX,AACE,IAAAC,cAAOE;IAAPD,cAAST;AAAT,AAAA,oBAAA,CAAAQ,4CAAAA,qDAAAC,eAAAD,iCAAAC,3DACER,gDAAAA;AADF;;AAEE,QAAA,8EAAA,9BAAS,AAACU,0BAA0BL,QAC3B,iBAAAM,WAASL;IAATK,eAAA,EAAA,CAAAA,YAAA,OAAA,KACS,sEAAAA,tEAACC,4CAAIF;AADd,AAAA,GAAA,CAAAC,gBAAA;AAAA;;AAES,yDAAA,IAAAA,tDAACE;;;;;;AAPzB,CAAA,sDAAA,tDAAMvB;;AAAN;AAAA,CAAA,gDAAA,WAAAI,3DAAMJ;AAAN,AAAA,IAAAK,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA,AASA,iCAAA,jCAAKoB;AAEL,AAAA,8BAAA,sCAAA9B,pEAAM+B;AAAN,AAAA,IAAA9B,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAA8B,iEAAA,CAAA,UAAA,MAAA3B;;;AAAA,AAAA,CAAA,mEAAA,aAAA4B,hFAAMD,8EAAQM;AAAd,AAAA,IAAAJ,aAAAD;iBAAA,AAAAvB,4CAAAwB,WAAA,IAAA,xEAAmBjB;AAAnB,AAAA,GACS,OAASqB;AADlB;AAAA,AAAA,MAAA,KAAAH,MAAA;;;AAEE,IAAAI,qBAA8B,AAACM,kBAAQd,+BAAUO;AAAjD,AAAA,oBAAAC;AAAA,IAAAC,aAAAD;YAAA,AAAA7B,4CAAA8B,WAAA,IAAA,nEAAUC;QAAV,AAAA/B,4CAAA8B,WAAA,IAAA,/DAAgBE;YAAhB,AAAAhC,4CAAA8B,WAAA,IAAA,nEAAkBG;WAAlB,AAAAjC,4CAAA8B,WAAA,IAAA,lEAAwBI;AAAxB,AACE,IAAAE,cAAOpB;IAAPqB,cAASN;AAAT,AAAA,oBAAA,CAAAK,4CAAAA,0CAAA,IAAAC,eAAAD,sBAAA,IAAAC;AACM9B;;4FACC,iBAAA+B,WAAQP,3CAIR,AAACS,7EACD,OAACrB,4CAAIsB;IALLH,eAAA,yGAAAA,vGACQ,AAAC5B,cAAIwB,OAAM,gBAAI,mDAAAI,SAAA,5DAACC,hBAAmBpC;IAD3CmC,eAAA,+GAAAA,7GAEQ,AAAC5B,cAAIuB,QAAO,gBAAI,mDAAAK,aAAA,hEAACC,hBAAoBpC;AAF7C,AAAA,AAGa,0DAAAmC,aAAA,hEAACC;;;;;AAGrB,MAAO,0HAAA,2CAAA,rKAACG,gDAAQ,CAAA,4DAAqBd,6IAAQA;;;;AAXjD,CAAA,sDAAA,tDAAMN;;AAAN;AAAA,CAAA,gDAAA,WAAAI,3DAAMJ;AAAN,AAAA,IAAAK,WAAA,AAAAxB,gBAAAuB;IAAAA,eAAA,AAAAtB,eAAAsB;AAAA,AAAA,IAAArB,qBAAA;AAAA,AAAA,OAAAA,wDAAAsB,SAAAD;;;AAAA,AAaA,AA2CA","names":["var_args","args__5728__auto__","len__5722__auto__","i__5723__auto__","argseq__5729__auto__","cljs.core/IndexedSeq","contrib.sexpr-router/encode","p__34751","vec__34752","cljs.core.nth","seq34745","G__34746","cljs.core/first","cljs.core/next","self__5707__auto__","route","home-route","vec__34755","seq__34756","cljs.core/seq","first__34757","f","args","pred__34760","expr__34761","cljs.core/=","contrib.ednish/encode-uri","G__34769","cljs.core.map","clojure.string.join","contrib.sexpr-router/url-regex","contrib.sexpr-router/decode","p__34785","vec__34786","js/Error","seq34777","G__34778","s","temp__5814__auto__","vec__34789","match","_","query","hash","cljs.core/re-find","pred__34795","expr__34796","G__34798","clojure.string.split","cljs.core/rest","contrib.ednish/decode-uri","cljs.core.ex_info"],"sourcesContent":["(ns contrib.sexpr-router\r\n  (:require [clojure.string :as string]\r\n            contrib.ednish\r\n            [hyperfiddle.rcf :refer [tests]]))\r\n\r\n(defn encode [route & [home-route]]\r\n  (let [[f & args] route]\r\n    (condp = route\r\n      home-route \"/\"\r\n      (str \"/\" (contrib.ednish/encode-uri f)\r\n           \"/\" (some->> args\r\n                        (map contrib.ednish/encode-uri)\r\n                        (string/join \"/\"))))))\r\n\r\n(def url-regex #\"^/([^/?#]+/?)*(\\?[^#]*)?(#.*)?$\")\r\n\r\n(defn decode [s & [home-route]]\r\n  {:pre [(string? s)]}\r\n  (if-let [[match _ query hash] (re-find url-regex s)]\r\n    (condp = match\r\n      \"/\" home-route ; todo many edge cases\r\n      (->> (cond-> match\r\n                   (seq hash) (-> (string/split #\"#\") first) ; ?\r\n                   (seq query) (-> (string/split #\"\\?\") first)\r\n                   true (string/split #\"/\"))\r\n           (rest)\r\n           (map contrib.ednish/decode-uri)))\r\n    (throw (ex-info (str \"Invalid url: \" s) {::s s}))))\r\n\r\n(tests\r\n  \"sexpr routes\"\r\n  (encode `(user/hello)) := \"/user!hello/\"\r\n  (decode \"/user!hello/\") := `(user/hello)\r\n\r\n  (encode `(user/hello :a 1 \"alice\")) := \"/user!hello/:a/1/'alice'\"\r\n  (decode \"/user!hello/:a/1/'alice'\") := `(user/hello :a 1 \"alice\")\r\n\r\n  \"pass a home-route\"\r\n  (def home `(user/hello :default))\r\n  (encode `(user/hello :default) home) := \"/\"\r\n  (decode \"/\" home) := `(user/hello :default)\r\n  (encode `(user/hello :a 1 \"alice\") home) := \"/user!hello/:a/1/'alice'\"\r\n  (decode \"/user!hello/:a/1/'alice'\" home) := `(user/hello :a 1 \"alice\")\r\n\r\n  (encode `(user/hello) home) := \"/user!hello/\"\r\n  (decode \"/user!hello/\" home) := `(user/hello)\r\n\r\n  \"home-route edge cases\"\r\n  (def home `(user/hello))\r\n  (decode \"/\" home) := `(user/hello)\r\n  ;(decode \"/?a\" home) := `(user/hello)\r\n  ;(decode \"/#a\" home) := `(user/hello)\r\n  ;(decode \"//\" home) := `(user/hello)\r\n  ;(decode \"//a\" home) := `(user/hello)\r\n\r\n  \"routes must pass java.net.URI\"\r\n  #?(:clj (some? (java.net.URI. (encode `(user/hello)))) := true)\r\n\r\n  \"non-ascii characters (note: ednish is not a bijection)\"\r\n  (encode '(foo \"!$&'[]()*+,;=|\")) := \"/foo/'!$&'()()*+,;=%7C'\"\r\n  ;(decode \"/foo/'!$&'()()*+,;=%7C'\") := '(foo \"!$&'[]()*+,;=|\") -- todo why broken?\r\n\r\n  \"composite parameters\"\r\n  (encode `(hyperfiddle.blog/post [:user/sub \"google-oauth2|1234\"] #{\"events\" \"news\"}))\r\n  := \"/hyperfiddle.blog!post/(:user!sub,'google-oauth2%7C1234')/~%7B'news','events'%7D\"\r\n\r\n  (decode \"/hyperfiddle.blog!post/(:user!sub,'google-oauth2%7C1234')/~%7B'news','events'%7D\")\r\n  := `(hyperfiddle.blog/post [:user/sub \"google-oauth2|1234\"] #{\"events\" \"news\"})\r\n\r\n  (decode \"/bar/'qwerzxcv'\") := '(bar \"qwerzxcv\")\r\n  (decode \"/bar/((%3Fe,:foo,%3Fa))/'qwerzxcv'#blah\") := '(bar [[?e :foo ?a]] \"qwerzxcv\"))\r\n\r\n(tests\r\n  \"sexpr bijection check (egality only, can lose collection type)\"\r\n  (def home `(user/hello))\r\n  (def x `(user/hello :a 1 \"alice\"))\r\n  ((comp decode encode) x) := x\r\n  ((comp #(decode % home) #(encode % home)) home) := home\r\n\r\n  ;(defmacro check [x] `(let [x# ~x] ((comp decode encode) x#) := x#)) -- RCF bug\r\n  (defn check [x] (= x ((comp decode encode) x)))\r\n\r\n  (check x) := true\r\n  (check `(hyperblog/post)) := true\r\n  (check `(hyperblog/post 17592186045826)) := true\r\n  (check `(hyperblog/post :user/hello-world)) := true\r\n  (check `(hyperfiddle.blog/post [:user/sub \"google-oauth2|1234\"] #{\"events\" \"news\"})) := true\r\n  ;(check \"/foo/'!$&'()()*+,;=%7C'\") -- what's this?\r\n  )\r\n\r\n; malformed:\r\n;[:user/sub \"google-oauth2|116635422485042503270\"]\r\n;(decode \"/\") [nil [nil]]\r\n;(decode \"/garbagasdf..23425649=//e\")\r\n;(decode \"/asdf/asdf/asdf?asdf?asdf?sadf\")\r\n"],"x_google_ignoreList":[0]}